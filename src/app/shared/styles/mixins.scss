@use 'sass:math';
@use 'sass:string';

@function rem($px, $addUnit: true) {
  $result: math.div($px, 16);
  @if $addUnit {
    $result: $result + rem;
  }
  @return $result;
}

@mixin responsive-properties($props, $min-screen: $minWidthRem, $max-screen: $maxWidthRem) {
  @media (max-width: ($min-screen + rem)) {
    @each $property, $values in $props {
      $valueInRem: rem(map-get($values, minPx));
      #{$property}: $valueInRem;
    }
  }
  @media (min-width: ($max-screen + rem)) {
    @each $property, $values in $props {
      $valueInRem: rem(map-get($values, maxPx));
      #{$property}: $valueInRem;
    }
  }

  @media (min-width: ($min-screen + rem)) and (max-width: ($max-screen + rem)) {
    @each $property, $values in $props {
      $min-value-rem: rem(map-get($values, minPx), false);
      $max-value-rem: rem(map-get($values, maxPx), false);
      #{$property}: calc(
        #{$min-value-rem}rem + (#{$max-value-rem} - #{$min-value-rem}) * ((100vw - #{$min-screen}rem) / (#{$max-screen} - #{$min-screen}))
      );
    }
  }
}
